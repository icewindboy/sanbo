<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
		<!--property name="entityInterceptor">
			<bean
				class="com.infowarelab.elearning.domain.model.interceptor.HibernateInterceptor" />
		</property-->
        <property name="annotatedClasses">
            <list>
                <!-- 
                <value>com.infowarelab.elearning.domain.model.Tools</value>
                 -->
                </list>
        </property>

        <property name="hibernateProperties">
            <props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format.sql}</prop>
			 	<prop key="hibernate.cache.use_query_cache">true</prop>
			 	<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache.file}</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>    
            </props>
        </property>
    </bean>
    <!-- ===================================================================-->
    <!-- AOP: Configuration and Aspects                                      -->
    <!-- ===================================================================-->
    <bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <aop:aspectj-autoproxy />
    <!--aop:spring-configured /-->
    <tx:annotation-driven />

    <bean class="org.springframework.transaction.aspectj.AnnotationTransactionAspect" factory-method="aspectOf" dependency-check="none" lazy-init="false">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <aop:config>
        <aop:advisor id="managerTx" advice-ref="txAdvice"
			pointcut="execution(* com.infowarelab.elearning..*Mgr*.*(..))" order="1" />
        <aop:advisor id="serviceTx" advice-ref="txAdvice"
			pointcut="execution(* com.infowarelab.elearning..*Service*.*(..))" order="2" />
        <aop:advisor id="repositoryTx" advice-ref="txAdvice"
			pointcut="execution(* com.infowarelab.elearning..*Repository*.*(..))" order="3" />
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
	    <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="list*" read-only="true" />
            <tx:method name="load*" read-only="true" />
	    <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

</beans>
